{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Dungeon Adventure Developer Documentation","text":"<p>Welcome to the developer documentation for Dungeon Adventure. This guide provides technical details about the game's structure, components, and implementation.</p>"},{"location":"#quick-links","title":"Quick Links","text":"<ul> <li>Project Overview</li> <li>Core Components</li> <li>Game Flow</li> <li>Development Guide</li> </ul>"},{"location":"#getting-started","title":"Getting Started","text":"<p>To begin working with the Dungeon Adventure codebase:</p> <ol> <li>Clone the repository</li> <li>Install dependencies: <code>pip install -r requirements.txt</code></li> <li>Run tests: <code>pytest</code></li> <li>Start the game: <code>python src/main.py</code></li> </ol> <p>For contribution guidelines, see the Development Guide.</p>"},{"location":"development-guide/","title":"Development Guide","text":""},{"location":"development-guide/#coding-standards","title":"Coding Standards","text":"<ul> <li>Use PEP 8 for Python code style</li> <li>Use type hints for function parameters and return values</li> <li>Write docstrings for all classes and methods</li> </ul>"},{"location":"development-guide/#git-workflow","title":"Git Workflow","text":"<ol> <li>Create a new branch for each feature or bug fix</li> <li>Make small, focused commits</li> <li>Submit a pull request for review before merging to main</li> </ol>"},{"location":"development-guide/#contributing","title":"Contributing","text":"<ol> <li>Fork the repository</li> <li>Create your feature branch</li> <li>Commit your changes</li> <li>Push to your fork</li> <li>Create a new Pull Request</li> </ol> <p>[don't need much here for now]</p>"},{"location":"enums-and-constants/","title":"Enums and Constants","text":""},{"location":"enums-and-constants/#game-state-game_statepy","title":"Game State (game_state.py)","text":"<ul> <li>TITLE_SCREEN, PLAYER_CREATION, EXPLORING, COMBAT, INVENTORY, GAME_OVER</li> </ul>"},{"location":"enums-and-constants/#item-types-item_typespy","title":"Item Types (item_types.py)","text":"<ul> <li>ItemType: WEAPON, POTION, KEY, TREASURE, PILLAR</li> <li>PotionType: HEALING, VISION</li> <li>PillarType: ABSTRACTION, ENCAPSULATION, INHERITANCE, POLYMORPHISM</li> <li>WeaponType: SWORD, AXE, BOW</li> </ul>"},{"location":"enums-and-constants/#room-types-room_typespy","title":"Room Types (room_types.py)","text":"<ul> <li>RoomType: NORMAL, ENTRANCE, EXIT, PIT</li> <li>Direction: NORTH, EAST, SOUTH, WEST</li> </ul>"},{"location":"enums-and-constants/#resources-rpy","title":"Resources (R.py)","text":"<p>Contains constant values for map markers and formatting.</p>"},{"location":"game-flow/","title":"Game Flow","text":""},{"location":"game-flow/#main-game-loop","title":"Main Game Loop","text":"<p>The main game loop is managed by the <code>GameController</code> class in <code>src/controllers/game_controller.py</code>.</p> <ol> <li>Initialize game state (TITLE_SCREEN)</li> <li>While game is not over:</li> <li>Handle current game state</li> <li>Process player input</li> <li>Update game state</li> <li>End game</li> </ol>"},{"location":"game-flow/#state-transitions","title":"State Transitions","text":"<p>Game states are defined in <code>src/enums/game_state.py</code>:</p> <ul> <li>TITLE_SCREEN</li> <li>PLAYER_CREATION</li> <li>EXPLORING</li> <li>COMBAT</li> <li>INVENTORY</li> <li>GAME_OVER</li> </ul> <p>The <code>GameController</code> manages transitions between these states based on player actions and game events.</p>"},{"location":"game-flow/#player-action-handling","title":"Player Action Handling","text":"<p>Player actions are processed by the <code>PlayerActionController</code> class in <code>src/controllers/player_action_controller.py</code>.</p> <p>Key methods:</p> <ul> <li><code>handle_action(action: str)</code>: Interprets and executes player commands</li> <li><code>move_player(direction: Direction) -&gt; bool</code>: Moves the player to a new room</li> <li><code>pick_up_item(item: Item) -&gt; bool</code>: Adds an item to the player's inventory</li> </ul> <p>The <code>GameController</code> delegates player input to the <code>PlayerActionController</code> for processing.</p>"},{"location":"project-overview/","title":"Project Overview","text":""},{"location":"project-overview/#high-level-architecture","title":"High-Level Architecture","text":"<p>Dungeon Adventure is structured using the Model-View-Controller (MVC) pattern:</p> <ul> <li>Model: <code>GameModel</code> in <code>dungeon_adventure.py</code></li> <li>View: <code>ConsoleView</code> in <code>console_view.py</code></li> <li>Controller: <code>GameController</code> in <code>game_controller.py</code></li> </ul>"},{"location":"project-overview/#module-dependencies","title":"Module Dependencies","text":"<ul> <li><code>characters</code>: Contains <code>DungeonCharacter</code>, <code>Hero</code>, and <code>Monster</code> classes</li> <li><code>dungeon</code>: Manages <code>Dungeon</code> and <code>Room</code> classes</li> <li><code>items</code>: Defines various item types (weapons, potions, etc.)</li> <li><code>enums</code>: Contains game-related enumerations</li> <li><code>controllers</code>: Handles game logic and player actions</li> <li><code>views</code>: Manages game display and user input</li> </ul>"},{"location":"project-overview/#development-setup","title":"Development Setup","text":"<ol> <li>Clone the repository</li> <li>Install dependencies: <code>pip install -r requirements.txt</code></li> <li>Run tests: <code>pytest</code></li> <li>Start the game: <code>python src/main.py</code></li> </ol>"},{"location":"testing/","title":"Testing","text":""},{"location":"testing/#running-tests","title":"Running Tests","text":"<p>Execute all tests using pytest:</p> <pre><code>pytest\n</code></pre>"},{"location":"testing/#test-structure","title":"Test Structure","text":"<p>[still need to add test file structure and naming conventions]</p>"},{"location":"testing/#writing-new-tests","title":"Writing New Tests","text":"<p>[don't know if we need this]</p>"},{"location":"utility-classes/","title":"Utility Classes","text":"<p>[Still need to add content here]</p>"},{"location":"combat/combat/","title":"Combat","text":""},{"location":"controllers/game-controller/","title":"Game Controller","text":"<p>Location: <code>src/controllers/game_controller.py</code></p> <p>Key methods:</p> <ul> <li><code>run_game()</code></li> <li><code>handle_current_state()</code></li> <li><code>handle_title_screen()</code></li> <li><code>handle_player_creation()</code></li> <li><code>handle_exploration()</code></li> </ul> <p>Manages game states and overall game flow.</p>"},{"location":"controllers/player-action-controller/","title":"Player Action Controller","text":"<p>Location: <code>src/controllers/player_action_controller.py</code></p> <p>Key methods:</p> <ul> <li><code>handle_action(action: str)</code></li> <li><code>move_player(direction: Direction) -&gt; bool</code></li> <li><code>pick_up_item(item: Item) -&gt; bool</code></li> <li><code>display_map()</code></li> </ul> <p>Processes and executes player commands.</p>"},{"location":"core-components/characters/","title":"Core Components - Characters","text":""},{"location":"core-components/characters/#dungeoncharacter-class","title":"DungeonCharacter Class","text":"<p>Location: <code>src/characters/dungeon_character.py</code></p> <p>Base class for all characters in the game.</p>"},{"location":"core-components/characters/#key-attributes","title":"Key Attributes","text":"<ul> <li><code>name</code>: str</li> <li><code>max_hp</code>: int</li> <li><code>current_hp</code>: int</li> <li><code>base_min_damage</code>: int</li> <li><code>base_max_damage</code>: int</li> <li><code>attack_speed</code>: int</li> <li><code>base_hit_chance</code>: int</li> </ul>"},{"location":"core-components/characters/#important-methods","title":"Important Methods","text":"<ul> <li><code>attempt_attack(target: DungeonCharacter) -&gt; int</code>: Perform an attack on the target</li> <li><code>take_damage(damage: int)</code>: Apply damage to the character</li> <li><code>heal(amount: int)</code>: Restore hit points</li> </ul>"},{"location":"core-components/characters/#hero-class","title":"Hero Class","text":"<p>Location: <code>src/characters/hero.py</code></p> <p>Represents the player character, inherits from <code>DungeonCharacter</code>.</p>"},{"location":"core-components/characters/#additional-attributes","title":"Additional Attributes","text":"<ul> <li><code>block_chance</code>: int</li> <li><code>level</code>: int</li> <li><code>xp</code>: int</li> <li><code>equipped_weapon</code>: Optional[Weapon]</li> </ul>"},{"location":"core-components/characters/#important-methods-hero","title":"Important Methods Hero","text":"<p>items.md - <code>equip_weapon(weapon: Weapon)</code>: Equip a weapon and apply its stat modifiers - <code>gain_xp(xp: int)</code>: Gain experience points and level up if necessary - <code>level_up()</code>: Increase level and update stats</p>"},{"location":"core-components/characters/#monster-class","title":"Monster Class","text":"<p>Location: <code>src/characters/monster.py</code></p> <p>Represents enemy characters, inherits from <code>DungeonCharacter</code>.</p>"},{"location":"core-components/characters/#additional-attributes-monster","title":"Additional Attributes Monster","text":"<ul> <li><code>heal_chance</code>: int</li> <li><code>min_heal</code>: int</li> <li><code>max_heal</code>: int</li> <li><code>xp_reward</code>: int</li> <li><code>loot</code>: List[Item]</li> </ul>"},{"location":"core-components/characters/#important-methods-monster","title":"Important Methods Monster","text":"<ul> <li><code>attempt_heal() -&gt; int</code>: Try to heal based on heal chance</li> <li><code>drop_loot() -&gt; List[Item]</code>: Return the monster's loot when defeated</li> </ul>"},{"location":"core-components/dungeon/","title":"Core Components - Dungeon","text":""},{"location":"core-components/dungeon/#dungeon-class","title":"Dungeon Class","text":"<p>Location: <code>src/dungeon/dungeon.py</code></p> <p>The <code>Dungeon</code> class represents the game world structure.</p>"},{"location":"core-components/dungeon/#key-attributes","title":"Key Attributes","text":"<ul> <li><code>rooms</code>: Dict[str, Room] - Stores all rooms in the dungeon</li> <li><code>entrance_room</code>: Optional[Room] - The starting room for the player</li> </ul>"},{"location":"core-components/dungeon/#important-methods","title":"Important Methods","text":"<ul> <li><code>add_room(name: str) -&gt; Room</code>: Creates and adds a new room to the dungeon</li> <li><code>connect_rooms(room1_name: str, direction: Direction, room2_name: str) -&gt; bool</code>: Connects two rooms in the specified direction</li> <li><code>get_room(room_name: str) -&gt; Room</code>: Retrieves a room by its name</li> </ul>"},{"location":"core-components/dungeon/#room-class","title":"Room Class","text":"<p>Location: <code>src/dungeon/room.py</code></p> <p>The <code>Room</code> class represents individual locations within the dungeon.</p>"},{"location":"core-components/dungeon/#key-attributes-room","title":"Key Attributes Room","text":"<ul> <li><code>name</code>: str - Unique identifier for the room</li> <li><code>room_type</code>: RoomType - Type of room (e.g., NORMAL, ENTRANCE, EXIT)</li> <li><code>connections</code>: Dict[Direction, Optional[Room]] - Connections to other rooms</li> <li><code>items</code>: List[Item] - Items present in the room</li> </ul>"},{"location":"core-components/dungeon/#important-methods-room","title":"Important Methods Room","text":"<ul> <li><code>connect(direction: Direction, other_room: Room) -&gt; bool</code>: Connects this room to another in the specified direction</li> <li><code>add_item(item: Item)</code>: Adds an item to the room</li> <li><code>remove_item(item: Item)</code>: Removes an item from the room</li> </ul>"},{"location":"core-components/dungeon/#dungeon-generation-algorithm","title":"Dungeon Generation Algorithm","text":"<p>The dungeon is generated in the <code>make_rooms</code> method of the <code>GameModel</code> class:</p> <ol> <li>Create the entrance room</li> <li>Recursively add and connect rooms</li> <li>Place items and monsters in rooms</li> <li>Set the entrance and exit rooms</li> </ol>"},{"location":"core-components/items/","title":"Items","text":""},{"location":"core-components/items/#item-base-class","title":"Item Base Class","text":"<p>Location: <code>src/items/item.py</code></p> <p>Key attributes:</p> <ul> <li><code>name: str</code></li> <li><code>description: str</code></li> <li><code>weight: float</code></li> <li><code>item_type: ItemType</code></li> </ul>"},{"location":"core-components/items/#weapon-class","title":"Weapon Class","text":"<p>Location: <code>src/items/weapon.py</code></p> <p>Key attributes:</p> <ul> <li><code>weapon_type: WeaponType</code></li> <li><code>damage: int</code></li> <li><code>durability: int</code></li> </ul>"},{"location":"core-components/items/#potion-class","title":"Potion Class","text":"<p>Location: <code>src/items/potion.py</code></p> <p>Subclasses: HealingPotion, VisionPotion</p>"},{"location":"core-components/items/#pillar-class","title":"Pillar Class","text":"<p>Location: <code>src/items/pillar.py</code></p> <p>Represents the Pillars of OO (Abstraction, Encapsulation, Inheritance, Polymorphism)</p>"},{"location":"views/console-view/","title":"Console View","text":"<p>Location: <code>src/views/console_view.py</code></p> <p>Key methods:</p> <ul> <li><code>display_message(message)</code></li> <li><code>get_user_input(prompt: str) -&gt; str</code></li> <li><code>display_player_status(game_model: GameModel)</code></li> <li><code>display_available_actions(game_model)</code></li> </ul> <p>Handles console-based user interface and input.</p>"},{"location":"views/map-visualizer/","title":"Map Visualizer","text":"<p>Location: <code>src/views/map_visualizer.py</code></p> <p>Key methods:</p> <ul> <li><code>initialize()</code></li> <li><code>update_explored_rooms(current_room: Room)</code></li> <li><code>generate_map(current_room: Room) -&gt; List[str]</code></li> <li><code>display_map(current_room: Room)</code></li> </ul> <p>Generates and displays the dungeon map.</p>"}]}